import { NextResponse } from 'next/server';

export const dynamic = 'force-dynamic';

export async function GET(request: Request) {
  try {
    const { searchParams } = new URL(request.url);
    const text = searchParams.get('text');

    if (!text) {
      return NextResponse.json(
        { error: 'Text parameter is required' },
        { status: 400 }
      );
    }

    // This is a base64-encoded 1-second silent MP3 file
    // This is a valid MP3 file that browsers can play
    const silentAudioBase64 = 'SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4Ljc2LjEwMAAAAAAAAAAAAAAA//tQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASW5mbwAAAA8AAAASAAAeMwAUFBQUFCIiIiIiIjAwMDAwMD09PT09PUJCQkJCQkZGRkZGRkpKSkpKSlJSUlJSUlZWVlZWVlpaWlpaWl5eXl5eXmJiYmJiYmZmZmZmZmpqampqam5ubm5ubnJycnJycoKCgoKCgpKSkpKSkqCgoKCgoK+vr6+vr7+/v7+/v8/Pz8/Pz9/f39/f3+/v7+/v7//////////////////AAAAOUxBTUUzLjEwMAQoAAAAAAAAAAAVCCQCQCEAAeAAAAwPVz/7oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/7UGQAAAAGkAAAAKAAIAAAgAAJGMAAAAQAAACAAAIAAAgAABEx

    // Return the audio as a data URL that can be used directly in an audio element
    return new Response(`data:audio/mp3;base64,${silentAudioBase64}`, {
      headers: {
        'Content-Type': 'text/plain',
      },
    });
    
  } catch (error) {
    console.error('Mock Audio API error:', error);
    return NextResponse.json(
      { error: 'Failed to generate mock audio' },
      { status: 500 }
    );
  }
} 